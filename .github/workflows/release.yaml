name: Publish ds-auth to DO Container Registry
on:
  release:
    types: [published]
jobs:
  build:
    name: Build and Publish to Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      # Setup .npmrc file to fetch private packages
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@dawnsheedy'
      - name: Build image
        run: docker build -t ds-auth . --build-arg gh_token=${{ secrets.GITHUB_TOKEN }}
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600
      - name: Tag image
        run: docker tag ds-auth registry.digitalocean.com/ds-services-container/ds-auth:${{ env.RELEASE_VERSION }}
      - name: Push image to DO Container Registry
        run: docker push registry.digitalocean.com/ds-services-container/ds-auth:${{ env.RELEASE_VERSION }}

  deploy:
    name: Configure and deploy to k8s
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Authenticate kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ds-k8s
      - name: Write secrets
        run: |
          echo $'mongo_uri: \"${{ secrets.MONGO_URI }}\" \n\
          secret: \"${{ secrets.AUTH_SECRET }}\"' > ds-auth/environments/secret.default.yaml
      - name: Helm Deploy
        run: helm upgrade --install --create-namespace -n default --set image.tag=${{ env.RELEASE_VERSION }} --set namespace=default ds-auth ds-auth
        

      

